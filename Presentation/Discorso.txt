ANDREA (SLIDES 3 TO 9) --> ESTIMATE: 6-7 MINUTES

SLIDE 3
As you have seen from the first slide, our project is about the implementation of a DDoS attack, specifically a DNS reflection and amplification attack.

The choice was not made at random, instead it was the result of a selection and research process.

In the next slides i'm gonna introduce you to the reasons behind our choice and we are gonna see briefly some kinds of DDoS attacks.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 4
We started from the intention of simulating a DDoS attack, however as you can see from the figure, there many different ways in which this type of attack can be performed. 

Our goal was that of experimenting something commonly used in real word situations and not just in sporadic cases.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 5
We discovered that according to a recent report by cloudflare, published in the first quarter of 2023, almost 1/3 of all the DDoS attacks are DNS based.

However also inside the sub-category of the dns-based attack there are several possibilities and here are listed the three most important.

DNS query flood, TCP flood and DNS reflection and amplification.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 6
The DNS query flood is aimed at exhausting the target resources, by sending a huge amount of DNS queries.

The key point is sending lots of queries and this is achieved by the attackers using a botnet. A botnet is an army of compromised devices controlled by the attacker to send DNS queries.

This attack can mainly have two target, a recursive NS or an authoritative one. 

In the case the target is the first one, there is a trick played by the attacker, that consists in crafting the queries in a such a way that they are not already cached in the server. 
That way the server is forced to query other NS until, eventually it gets the response and sends it back to the client.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 7
If the target is a specific authoritative NS, the attack takes the name of water torture.

The goal is the same as before, but on this case the trick played is that of crafting queries taking the domain of the target and adding a random string.

That way, we are sure the queries reach the target using its resources to answer to them NXDOMAIN.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 8
TCP flood attack has still the goal of exhausting the target resources but instead of using UDP traffic it exploits the THREE-WAY handshaking of TCP.

The trick is to open a large number of TCP connections without closing them, therefore forcing the target to use its resources to handle it, until they are exhausted.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 9
The last type of attack is the DNS reflection and amplification.

The goal of this attack is to exhaust the target network bandwidth by exploiting the concepts of reflection and amplification.

It starts with the spoofing of the IP address of a victim by the attacker. Then the attacker sends lots of queries to a misconfigured DNS recursive 
server that will consequently respond to the victim IP.

So we have a kind of reflection on the name server.

The amplification affect is obtained since usually the types of queries performed are of type ANY, therefore the response size is larger than the query, 
leading to an amplification effect.

The higher the amplification factor, the higher the impact of this attack.

According to the already cited report, DNS reflection is the most commonly used attack among the dns-based ddos, so we decided to simulate it.


---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------

ANDREA (SLIDES 10 TO 13) --> ESTIMATE: 5-6 MINUTES

SLIDE 10
The DNS is vital for the internet, so protecting it from DDoS and any other type of attack is crucial.

To achieve this many mitigation measures have been deployed across the years and we are gonna see some of them in this section.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 11
They can be roughly classified in two categories.

Proactive measures that tries to prevent and avoid the attack.

Reactive measures aimed at identifying and stop as soon as possible the attack, while increasing the system resilience as well.

Read the measures.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 12
The idea behind the rate limiting is to limit the number of response a server can provide to a given IP. That way the server can stop providing answer 
to the spoofed IP and the reflection effect is mitigated.

As regard the trusted sources the idea is to create a whitelist of IP that are legitimated to send queries to the DNS server. 
Thereby, the number of IP that can be spoofed to perform attack is reduced and consequently the probability of an attack.
However there is still the risk of the trusted IP to be spoofed, so it is not a foolproof measure.

Lastly it is possible to set firewall to control and filter traffic to block the queries and prevent the attack.

---------------------------------------------------------------------------------------------------------------------------------------

SLIDE 13
Here are some reactive measures.

The first is the anycast scheme. The idea here is to create replicas of the server all with the same logical IP and use the anycast scheme to choose at 
any time the best server according to some criteria (like availability and traffic).
Thereby, the attacker would have to run out of service all the server which becomes more difficult the higher the number of servers.

With machine learning the idea is to train some classification algorithms like SVM, NN and trees (random forests) to discriminate between an attack situation and a 
legitimate one, according to some features extracted from the queries.
However has been recently shown that using an adversarial approach the classification algorithm can be fooled. 
This approach consists in taking a two network, the classifier and another challenging it. This network can learn to slightly change the features to fool the classifier.

The idea of caching behavior is to keep providing the cached entry when a relevant server is down, independently on the TTL. That way even during an attack the cached 
entries can be served, increasing the resilience of the system.

SLIDE 22
To perform our DDOS attack, we created some scripts that implement functions such as multithreading, IP spoofing, and ping sweeping 
that we will use combined together in order to perform our DDos attack.
SLIDE 23
Let's begin by delving into our first script, which revolves around DNS queries. With this custom-built script, 
we possess the power to construct and send personalized DNS queries, enabling us to navigate the intricate DNS landscape. 
The script empowers us to tailor the DNS request type, edit the flags, specify a spoofed IP address, 
and leverage the advantages of multithreading for enhanced efficiency.
SLIDE 24
Our DNS script is a remarkable creation, masterfully crafted using the Python programming language. 
It seamlessly integrates the dnspython library, which enables us to construct and manipulate DNS packets with precision and finesse. 
Additionally, we leverage the Scapy library to handle the IP headers, allowing us to control and customize every aspect 
of the DNS packets we generate.
SLIDE 25
Multithreading plays a pivotal role in our script, augmenting our offensive capabilities. 
By harnessing the power of the threading Python library, we have implemented multithreading functionality. 
Although disabled by default, we possess the flexibility to specify the desired number of threads to be employed in the attack. 
Furthermore, we have precise control over the total number of DNS requests sent, 
enabling us to fine-tune our offensive operations for optimal impact.
SLIDE 26
Now, let's venture into the fascinating world of IP spoofing. Our exploration of this technique centers around the ping sweeping approach. 
Through ping sweeping, we engage in the process of identifying active hosts within a specific network range. 
By crafting and sending Address Resolution Protocol (ARP) request packets to the network, 
we capture the responses and extract the IP addresses of the active hosts. 
This valuable information empowers us with a deeper understanding of potential targets, enriching our offensive capabilities.



---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------







